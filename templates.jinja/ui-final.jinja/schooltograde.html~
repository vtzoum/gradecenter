{% extends "base+jqx+flat-admin-bootstrap.html" %}

{% block title %}
    ΣΧΟΛΕΙΑ ΥΠΟΔΟΧΗΣ-JN
{% endblock %}

<!-- Start Block HTML -->
{% block html %}

<!-- AJAXMessages Box -->
<div id="jsonMessages"></div>

<!-- Data -->
<div class="row no-margin-bottom">

<!-- <div class="row"> reduces margin -->
<!--
<div class="col-lg-3 col-md-6 col-sm-6 col-xs-12">
    <a href="#">
    <div class="card green summary-inline">
        <div class="card-body">
            <i class="icon fa fa-tags fa-4x"></i>
            <div class="content">
                <div class="title"><span id="count"></span></div>
                <div class="sub-title">Σύνολο</div>
            </div>
            <div class="clear-both"></div>
        </div>
    </div>
    </a>

    <a href="#">
    <div class="panel panel-info">
      <div class="panel-heading">Γράφημα</div>
      <div class="panel-body">            
      
      <!- START Charts <div id="chartBarGauge" style="width:100%;"></div> height: 100px ->
        
        <div id="chartPie" style="width:100%; height:300px;"></div>
      </div>
    </div>
    </a>

    <!- aggregates ->
    <div>
        <span id="avg"></span> 
        <span id="max"></span>
        <span id="min"></span >
        <span id="sum"></span >
    </div>

</div>
// LEFT side panel -->
<!-- x/y.col  -->

<div class="col-lg-12">
    <div class="panel panel-primary fresh-color">
        <div class="panel-heading">
            <h3 class="panel-title"><i class="fa fa-bar-chart-o fa-fw"></i> ΣΧΟΛΕΙΑ ΥΠΟΔΟΧΗΣ </h3>
        </div>
        <div class="panel-body">
        <!-- jqxGrid -->
        <div id="jqxgridSchoolToGrade"></div>
        </div>
    </div>
</div>
<!-- x/y.col  -->

</div>
<!-- /.row -->


<!-- *****************************************-->
<!--                Dialogue DELETE           -->
<!-- *****************************************-->
<div id="dialogDeleteSchoolToGrade" tabindex="-1" role="dialog" aria-hidden="true" style="display: none;">

<!-- content-->
<div class="modal-content">
    <div class="modal-header">
        <h4 class="modal-title" id="myModalLabel">Διαγραφή εγγραφής.</h4>
    </div>
    <div class="modal-body">
        Θέλετε να κάνετε την διαγραφή της εγγραφής;
    </div>
    <div class="modal-footer">        
        <button id="buttonDialogDeleteSchoolToGradeYes" class="btn btn-danger" >NAI</button> 
        <button id="buttonDialogDeleteSchoolToGradeNo" class="btn btn-primary" style="margin-left: 5px;" >OXI</button>
    </div>
</div>
<!-- ./content-->

<!-- End Dialogue DELETE -->
</div>


<!-- *****************************************-->
<!--                Dialogue NEW              -->
<!-- *****************************************-->
<div id="dialogAddSchoolToGrade"  tabindex="-1" role="dialog" aria-hidden="true" style="display: none;">

<!-- content-->
<div class="modal-content">
    <div class="modal-header">
        <h4 class="modal-title" id="myModalLabel">Προσθήκη Εγγραφής.</h4>
    </div>

    <div class="modal-body">
    <!-- Start FORM ADD -->
    <!-- form action="javascript:void(0);" is for action=none -->
    <form class="form-horizontal" id="formAddSchoolToGrade" action="javascript:void(0);" >
    {% csrf_token %}

      <div class="form-group">
        <label class="control-label col-sm-3" for="code">Kωδικός:</label>
        <div class="col-sm-3">
          <input id="code" class="form-control" placeholder="Kωδικός">
        </div>
      </div>

      <div class="form-group">
        <label class="control-label col-sm-3" for="name">Όνομα:</label>
        <div class="col-sm-9">
          <input id="name" class="form-control" placeholder="Όνομα">
        </div>
      </div>
      
      <div class="form-group">
        <label class="control-label col-sm-3" for="ddeCode">Κωδ.ΔΔΕ:</label>
        <div class="col-sm-6">
            <div id="ddeCode" class="form-control" placeholder="Κωδ.ΔΔΕ"></div>
        </div>
      </div>
      
      <div class="form-group">
        <label class="control-label col-sm-3" for="type">Τύπος:</label>
        <div class="col-sm-6">
            <div id="type" class="form-control" placeholder="Τύπος"></div>
        </div>
      </div>

      <div class="form-group">
        <div class="col-sm-offset-3 col-sm-9">
          <button id="buttonDialogAddSchoolToGradeYes" class="btn btn-primary" >OK</button> 
          <button id="buttonDialogAddSchoolToGradeNo" class="btn btn-default" >Άκυρο</button>
        </div>
      </div>

    <!-- End FORM ADD -->
    </form>
    </div>
    <!-- ./body -->

    <div class="modal-footer">        
    </div>
    <!-- ./footer-->

  </div>
</div>
<!-- ./ Dialogue ADD -->

<!-- End Block HTML -->
{% endblock %}


<!-- Block JS -->
{% block js %}

<script type="text/javascript">
$(document).ready(function () {

// Handle Ajax messages
helperAjaxMessagesProcess();

var aggregateData = null;
////////////////////////////////
//Buttons
///////////////////////////////                        
//$('#buttonDialogAddSchoolToGradeYes, #buttonDialogAddSchoolToGradeNo').jqxButton({ theme: theme, height: 30, width: 80 });
//$('#buttonUpdateGridSchoolToGrade, #buttonAddSchoolToGrade').jqxButton();
////////////////////////////////
// SchoolToGrade data
///////////////////////////////                       
//url:helperGetAjaxLinkForUser ("user.is_active}}", '/schooltograde/crud/'), 
var sourceSchoolToGrade = {
    url:'/schooltograde/crud/', 
    //root:'data2', 
    datatype: "json",
    datafields: [
        {name: "id"}, 
        {name: 'code', type: 'string' },
        {name: 'name', type: 'string' },
        {name: 'ddeCode', type: 'string' },
        {name: 'ddeName', type: 'string' },
        //{name: 'type'},
        {name: 'type', type: 'integer' }, // number, 
        {name: 'lexType', value: 'type', values: { source: dataAdapterSchoolToGradeType.records, value: 'type', name: 'lexType' } },
    ],
    //{ type: 'bool' },{ type: 'date'},{ type: 'number' }, { type: 'string' },
    id: 'id',
    sortcolumn: 'name',
    sortdirection: 'asc',     
    // ADD
    addrow: function (rowid, rowdata, position, commit) {
        // synchronize with the server - send insert command
        var data = "action=add&amp;" + $.param(rowdata);
        //var data = "insert=true&" + $.param(rowdata);
        $.ajax({
            method: 'POST', 
            url: '/schooltograde/crud/', 
            data: data,
            dataType: 'json',
            cache: false,
            success: function (response, status, xhr) {
                commit(true);
                console.log(response);
            },
            error: function (jqXHR, textStatus, errorThrown) {
                commit(false);
            }
        }); //ajax
    }, //addrow
    // DELETE
    deleterow: function (rowid, commit) {
        // synchronize with the server - send delete command
        var data = "action=delete&amp;" + $.param({ id: rowid });
        //var data = "delete=true&" + $.param({ EmployeeID: rowid });
        $.ajax({
            method: 'POST', 
            url: '/schooltograde/crud/', 
            data: data,
            cache: false,
            success: function (response, status, xhr) {
                commit(true);
                console.log(response);
            },
            error: function (jqXHR, textStatus, errorThrown) {
                commit(false);
            }
        });//ajax
    }, //delete
    // UPDATE
    updaterow: function (rowid, rowdata, commit) {
    // synchronize with the server - send update command
        var data = "action=update&amp;" + $.param(rowdata);
        //var data = "update=true&amp;" + $.param(rowdata);
        //alert ('Edit B4 .ajax');
        $.ajax({
            method: 'POST', 
            url: '/schooltograde/crud/', 
            data: data,
            dataType: 'json',
            cache: false,
            success: function (response, status, xhr) {
                commit(true);// update command is executed.
                console.log(response);
            },
            error: function(jqXHR, textStatus, errorThrown) {
                commit(false);
            }
        });//.ajax
    }, //updaterow
}; //source

//DataAdapter create + 
var dataAdapterSchoolToGrade = new $.jqx.dataAdapter(sourceSchoolToGrade);

///////////////////////////
// GRID jqxSchoolToGradeGrid
//////////////////////////                        
$("#jqxgridSchoolToGrade").jqxGrid({
    source: dataAdapterSchoolToGrade,
    columns: [ //columntype: 'textbox', 
        { text: 'id', datafield: 'id', hidden: true },
        { text: 'Kωδικός', datafield: 'code', filtertype: 'input', width: '10%', },
        { text: "Όνομα", datafield: 'name',  filtertype: 'input',  }, //width: '30%',
        { text: "Κωδ.ΔΔΕ", datafield: 'ddeCode', columntype: 'textbox', filtertype: 'checkedlist', width: '10%', }, //filtertype: 'input', 
        { text: "ΔΔΕ", datafield: 'ddeName', filtertype: 'input', width: '20%', },
        { text: "Τύπος", datafield: 'type', displayfield: 'lexType', columntype: 'dropdownlist', width:'15%', 
            createeditor: function (row, value, editor) {
                editor.jqxDropDownList({ source: dataAdapterSchoolToGradeType, displayMember: 'lexType', valueMember: 'type', });
            }, // createeditor
            aggregates: ['count'], 
        },
        /*
        { text: 'Edit', editable: false, columntype: 'button', width: '5%', 
            cellsrenderer: function () {
                return "...";
            }, 
            buttonclick: function (row) {
                $("#jqxgridSchoolToGrade").jqxGrid('beginrowedit', row);
            } // buttonclick
        }, //edit 
        */

        { text: 'Διαγραφή', editable: false, filterable: false, columntype: 'button', width: '5%', 
            cellclassname: "redClass1",
            cellsrenderer: function () {
                //return "<button style='height:30px;' type='button' class='btn btn-danger'> xxxx </button>";
                return "X";
            }, // cellsrenderer
            buttonclick: function (row) {
                $("#dialogDeleteSchoolToGrade").jqxWindow('open');
                //var datarow = $('#jqxgridSchoolToGrade').jqxGrid('getrowdata', row);
                //$('#jqxgridSchoolToGrade').jqxGrid('deleterow', datarow.id);
                //console.log('remove btn clicked id='+datarow.id);
          } // buttonclick
        }, //remove

        //return '<div style="text-align: center; margin-top: 7px;"><span class="glyphicon glyphicon-trash" aria-hidden="true"></span></div>'
        
    ],    

    editable: true, editmode: 'dblclick', selectionmode: 'singlerow', //multiplecellsextended
    filterable: true,showfilterrow: true, 
    pageable: false, 
    sortable: true, 
    width: '100%', height:'500', theme:theme, 
    autoheight: false, columnsresize: true, //rowsheight: 30,    
    showaggregates: true, 
    showstatusbar:true, showtoolbar:true, rendertoolbar: function (statusbar) {
        // appends buttons to the status bar.
        var container = $("<div style='position: relative; margin: 5px; '></div>");
        var addButton = $("<button type='button' class='btn btn-primary' style='float:right;'> Προσθήκη </button>");
        //var addButton = $("<div style='float: right; margin-left: 10px;'><span> Προσθήκη </span></div>");
        var reloadButton = $("<button type='button' class='btn btn-primary' style='float: right; margin-right: 10px;'> Ανανέωση </button>");
        //var reloadButton = $("<div style='float: right; margin-left: 10px;'><span>Ανανέωση</span></div>");
        //<button id="buttonAddSchoolToGrade" type="button" class="btn btn-primary">Add Record</button>
        
        container.append(addButton);
        container.append(reloadButton);
        statusbar.append(container);
        addButton.jqxButton();
        //addButton.jqxButton( {width: 60, height: 18} );
        reloadButton.jqxButton();
        //reloadButton.jqxButton({  width: 65, height: 18 });
        // add new row.
        addButton.click(function (event) {
            //var datarow = generatedata(1);
            //$("#jqxgridSchoolToGrade").jqxGrid('addrow', null, datarow[0]);
            $( '#dialogAddSchoolToGrade').jqxWindow('open');
        });
        // reload grid data.
        reloadButton.click(function (event) {
            $("#jqxgridSchoolToGrade").jqxGrid({ source: dataAdapterSchoolToGrade });
        });
    } //render toolbar

    //selectionmode: 'multiplerowsextended', 'singlecell',
});//SchoolToGrade grid

////////////////////////////////
// Buttons 
////////////////////////////////              
//$("#addrowbutton #deleterowbutton #updaterowbutton").jqxButton({ theme: theme });
$( '#buttonAddSchoolToGrade' ).click(function (event) {
    $("#code, #name, #ddeCode, #ddeName, #type").val(''); 
    //$("#jqxgridSchoolToGrade").jqxGrid({disabled:true});
    $( '#dialogAddSchoolToGrade').jqxWindow('open');
});
$( '#buttonUpdateGridSchoolToGrade' ).click(function (event) {
    $("#jqxgridSchoolToGrade").jqxGrid({ source: dataAdapterSchoolToGrade });
});

/****************************
 Dialogue DELETE
****************************/
//buttonDialogDeleteSchoolToGradeYes
$( '#dialogDeleteSchoolToGrade' ).jqxWindow({ 
    autoOpen: false, title: 'Διαγραφή Εγγραφής', 
    isModal: true, modalOpacity:0.7, 
    //cancelButton: $('#buttonDialogDeleteSchoolToGradeNo'), 
    keyboardNavigation: true, keyboardCloseKey: 13,
    showAnimationDuration: 600, closeAnimationDuration: 200,
    //resizable: false, modalOpacity: 0.5, 
    //position: { x: parseInt($("#jqxgridSchoolToGrade").offset().left) + 60, y: parseInt($("#jqxgridSchoolToGrade").offset().top) + 60,}, 
    width: 'auto', height: 'auto', 
});        

//Dialogue > Buttons
//$('#buttonDialogDeleteSchoolToGradeYes, #buttonDialogDeleteSchoolToGradeNo').jqxButton({ theme: theme, height: 30, width: 80 });
$('#buttonDialogDeleteSchoolToGradeYes, #buttonDialogDeleteSchoolToGradeNo').jqxButton({height: 30, width: 80 });
// Event > Dialogue
$("#dialogDeleteSchoolToGrade").on('close', function () {
    //$("#jqxgridSchoolToGrade").jqxGrid({ disabled: false });
});
// Event > Button > Yes
$('#buttonDialogDeleteSchoolToGradeYes').click(function () {
    var row = $('#jqxgridSchoolToGrade').jqxGrid('getselectedrowindex');
    var datarow = $('#jqxgridSchoolToGrade').jqxGrid('getrowdata', row);
    $('#jqxgridSchoolToGrade').jqxGrid('deleterow', datarow.id);
    //console.log('remove btn clicked id='+datarow.id);
    $('#dialogDeleteSchoolToGrade').jqxWindow('close');
});
// Event > Button > No
$('#buttonDialogDeleteSchoolToGradeNo').click(function () {
    $('#dialogDeleteSchoolToGrade').jqxWindow('close');
});


/****************************
 Dialogue ADD
****************************/
// Dialogue 
$('#dialogAddSchoolToGrade').jqxWindow({ 
    autoOpen: false, title: 'Νέα Εγγραφή', 
    isModal: true, modalOpacity:0.7, 
    keyboardNavigation: true, //keyboardCloseKey: 13, 
    showAnimationDuration: 600, closeAnimationDuration: 200,
    resizable: false, 
    //position: { x: parseInt($("#jqxgridSchoolToGrade").offset().left) + 60, y: parseInt($("#jqxgridSchoolToGrade").offset().top) + 60,}, 
    width: '400px', height: 'auto', theme:theme, 
});        

//Dialogue > Inputs
/*
//$( '#ddeCode' ).jqxDropDownList({ 
$("#ddeCode").jqxComboBox({
    source: dataAdapterDDETable, 
    displayMember: "name", valueMember: "id", 
    selectedIndex: -1, placeHolder:"Επιλέξτε DDE...",  
});
*/
$("#code, #name").jqxInput();
$("#ddeCode").jqxDropDownList({ source: dataAdapterDDETable, selectedIndex: 0, });
$("#type").jqxDropDownList({ source: ArraySchoolToGradeSchoolType, selectedIndex: 0, });
//$("#addWinRowButton").jqxButton({ theme: theme, width: 210, height: 40 });
//$("#code, #ddeCode").width(50); $("#name, #ddeName").width(150);
//$("#price").jqxNumberInput({ spinMode: 'simple', symbol: '$', width: 150, min: 0, height: 23, spinButtons: true });

//Dialogue > Buttons
//$('#buttonDialogAddSchoolToGradeYes, #buttonDialogAddSchoolToGradeNo').jqxButton({ theme: theme, height: 30, width: 80 });
$('#buttonDialogAddSchoolToGradeYes, #buttonDialogAddSchoolToGradeNo').jqxButton({ height: 30, width: 80 });

// Event > Dialogue
$( '#dialogAddSchoolToGrade' ).on('open', function () {
    $("#code, #name").val('');
    $("#ddeCode").jqxDropDownList({ selectedIndex: 0, });
    $("#type").jqxDropDownList({ selectedIndex: 0, });
});

// Event > Dialogue
$( '#dialogAddSchoolToGrade' ).on('close', function () {
    //$( "#jqxgridSchoolToGrade" ).jqxGrid('updatebounddata');
    //$("#jqxgridSchoolToGrade").jqxGrid({ disabled: false });
});

// Event > Button > Yes
$( '#buttonDialogAddSchoolToGradeYes' ).click(function (event) {
    
    $('#formAddSchoolToGrade').jqxValidator('validate');
    //event.preventDefault();
});

// Event > Button > No
$( '#buttonDialogAddSchoolToGradeNo' ).click(function () {
    $( '#dialogAddSchoolToGrade' ).jqxWindow('close');
    //$('#dialogAddSchoolToGrade').jqxWindow('hide');
});

//code, #name, #ddeCode, #ddeName
////////////////////////////
//Form ADD > jqxValidator
////////////////////////////
var msgCode = '-';
$('#formAddSchoolToGrade').jqxValidator( { 
    //hintType: 'label',
    //rule: 'required',  'length=4,12'  
    rules: [            
        /*
        // Na dw pali 
        { input: '#code', 
        action: 'valueChanged',    //'keyup', 
        message: msgCode,
        rule: function (input, commit) {
            var checkVal = $('#code').val();
            var pass = true; 
            var msgCode='Ο κωδικός υπάρχει ήδη!';
            if (checkVal == '') {
                msgCode = 'Κενός κωδικός!';
                return false;
            }
            var data = dataAdapterSchoolToGrade.records;
            for (var i=0; i < data.length; i++ ) {
                if (checkVal == data[i].code) {
                    msgCode = 'Ο κωδικός υπάρχει ήδη!';
                    return false;
                    break;
                }
            } 
        }, //rule
        }, //#code
        */
        { input: '#name', 
        action: 'valueChanged',    //'keyup', 
        rule: 'required',     
        message: 'To όνομα είναι κενό!',
        },        
        { input: '#ddeCode', 
          message: 'O κωδικο ΔΔΕ είναι κενός!',
          rule: function () {
            var index = $("#ddeCode").jqxDropDownList('getSelectedIndex'); 
            var result = (index != -1);
            return result;
          }
        }, //#ddeCode
        /*
        */
        { input: '#type', 
          message: 'O τύπος είναι κενός!',
          rule: function () {
            var index = $("#type").jqxDropDownList('getSelectedIndex'); 
            var result = (index != -1);
            return result;
          }
        }, //#type

    ],  //rules 


    /*    
    // set record values
    var newrow = { name: $("#code").val(), name: $("#name").val(), surname: $("#ddeCode").val(), codeAfm: $("#ddeName").val(), codeGrad: $("#type").val(), };
    $( "#jqxgridSchoolToGrade" ).jqxGrid('addrow', null, newrow);
    $( "#jqxgridSchoolToGrade" ).jqxGrid('updatebounddata');
    $( "#dialogAddSchoolToGrade" ).jqxWindow('close');
    */

    onSuccess: function (event) { 
        //event.preventDefault();        
        // set record values
        var code = $("#code").val();
        var name = $("#name").val(); 
        var indexDDE = $("#ddeCode").jqxDropDownList('getSelectedIndex'); 
        //var indexDDE = 230; 
        var indexType = $("#type").jqxDropDownList('getSelectedIndex'); 
        var newrow = { code: code, name: name, ddeCode: indexDDE, ddeName: 'NotUsed', type: indexType, };
        $( "#jqxgridSchoolToGrade" ).jqxGrid('addrow', null, newrow);
        $( "#dialogAddSchoolToGrade" ).jqxWindow('close');   
        console.log("Success");
        //alert('Success!'); 
    },//onSuccess

    onError: function () { 
        console.log("Failed!");
        //alert('Failed!'); 
    },//onError

}); 

//$('#jqxValidator').on('validationError', function (event) { event.preventDefault(); }); 
//$('#jqxValidator').on('validationSuccess', function (event) { event.preventDefault(); }); 


/////////////////////////
//BARGAUGE
/////////////////////////

/*
/////////////////////////
//CHARTS
/////////////////////////
// Define CHARTS
//              (id,          value,color,     bgColor,   title,                      subtitle,               isHalf)
generateBarGauge('bargauge1', [0], '#3AB54B', '#B0D2C8', 'Calories intake - 0/2200', '2200 calories pending', true);
generateBarGauge('bargauge2', [0], '#B24848', '#C9A5A6', 'Calories burnt - 0/1000', '1000 calories pending', true);
generateBarGauge('bargauge3', [0], '#D2AACE', '#DBCDDC', 'Exercises - 0/7', '7 sets pending');
generateBarGauge('bargauge4', [0], '#978CC2', '#CBCBE0', 'Sets - 0/4', '10 sets pending');

// UPDATE CHARTS (Grid) DataSource.onloaded 
var dataAdapterGauges = new $.jqx.dataAdapter(sourceGauges, {
    loadComplete: function (records) {
        changesBarGauge('bargauge1', 'Calories intake - ' + records[0].now + '/' + records[0].total, (records[0].total - records[0].now) + ' calories pending', [records[0].now]);
        changesBarGauge('bargauge2', 'Calories burnt - ' + records[1].now + '/' + records[1].total, (records[1].total - records[1].now) + ' calories pending', [records[1].now]);
        changesBarGauge('bargauge3', 'Exercises - ' + records[2].now + '/' + records[2].total, (records[2].total - records[2].now) + ' exercises pending', [records[2].now]);
        changesBarGauge('bargauge4', 'Sets - ' + records[3].now + '/' + records[3].total, (records[3].total - records[3].now) + ' sets pending', [records[3].now]);
    } //loadComplete
});

// Bind Data
dataAdapterGauges.dataBind();
*/



/*
$("#jsonMessages").fadeTo(3000, 500).slideUp(500, function(){
    $("#jsonMessages").slideUp(500);
});

$("#success-alert").fadeTo(2000, 500).slideUp(500, function(){
    $("#success-alert").slideUp(500);
});
*/

/*
$('#messages').ajaxComplete(function(e, xhr, settings) {
    alert ('FOO');
    var contentType = xhr.getResponseHeader("Content-Type");

    if (contentType == "application/javascript" || contentType == "application/json") {
        var json = $.evalJSON(xhr.responseText);
    alert ('BOO');

        $.each(json.django_messages, function (i, item) {
            addMessage(item.message, item.extra_tags);
        });
    }
}).ajaxError(function(e, xhr, settings, exception) {
    addMessage("There was an error processing your request, please try again.", "error");
});
*/


}); //doc.ready
</script>
{% endblock %}





