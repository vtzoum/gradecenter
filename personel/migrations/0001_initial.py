# -*- coding: utf-8 -*-
# Generated by Django 1.9 on 2018-05-24 21:33
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Acceptance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('books', models.PositiveSmallIntegerField(default=0)),
                ('booksAbscent', models.PositiveSmallIntegerField(default=0)),
                ('booksZero', models.PositiveSmallIntegerField(default=0)),
                ('status', models.PositiveSmallIntegerField(default=0)),
                ('statusTime', models.DateTimeField(blank=True, default=b'2018-05-24 21:33:03')),
                ('notes', models.CharField(blank=True, max_length=32)),
            ],
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.PositiveSmallIntegerField()),
                ('actionTime', models.DateTimeField(default=b'2018-05-24 21:33:03')),
                ('station', models.PositiveSmallIntegerField(default=0)),
                ('actionDuration', models.DurationField(blank=True, default=None, null=True)),
                ('wasTypeOf', models.PositiveSmallIntegerField(default=-1)),
            ],
        ),
        migrations.CreateModel(
            name='Dde',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=8, unique=True)),
                ('name', models.CharField(max_length=64, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Folder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('books', models.PositiveSmallIntegerField(default=0)),
                ('no', models.IntegerField()),
                ('codeBarcode', models.CharField(default=b'0000-0000', max_length=16)),
                ('codeLocation', models.PositiveSmallIntegerField(default=0)),
                ('codeStatus', models.PositiveSmallIntegerField(default=0)),
                ('codeType', models.PositiveSmallIntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='GradeCenterInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('folderBooks', models.SmallIntegerField(default=25)),
                ('minFolderBooks', models.SmallIntegerField(default=4)),
                ('maxActionDuration', models.SmallIntegerField(default=3)),
                ('name', models.CharField(default='43\u03bf \u0392\u039a \u0391\u0393\u03a1\u0399\u039d\u0399\u039fY', max_length=24)),
                ('article', models.CharField(default='o', max_length=2)),
                ('presidentName', models.CharField(default='\u0392\u0391\u03a3\u0399\u039b\u0395\u0399\u039f\u03a3', max_length=24)),
                ('presidentSurname', models.CharField(default='\u03a4\u0396\u039f\u03a5\u039c\u0391\u039a\u0391\u03a3', max_length=16)),
                ('phone', models.CharField(default=b'', max_length=14)),
            ],
        ),
        migrations.CreateModel(
            name='Grader',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('isCoordinator', models.BooleanField(default=False)),
                ('isgraderC', models.BooleanField(default=False)),
                ('status', models.PositiveSmallIntegerField(blank=True, default=0, null=True)),
                ('currentFolder', models.IntegerField(blank=True, null=True)),
                ('currentFolderID', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Lesson',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('booksAB', models.IntegerField(default=0)),
                ('booksABFolders', models.IntegerField(default=0)),
                ('booksC', models.IntegerField(default=0)),
                ('booksCFolders', models.IntegerField(default=0)),
                ('category', models.CharField(default=b'\xce\x98\xce\xb5\xcf\x84\xce\xb9\xce\xba\xce\xae\xcf\x82', max_length=16)),
                ('name', models.CharField(max_length=64)),
                ('status', models.SmallIntegerField(default=0)),
                ('type', models.SmallIntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='School',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('stype', models.IntegerField(choices=[(0, b'\xce\x93\xce\xa5\xce\x9c\xce\x9d\xce\x91\xce\xa3\xce\x99\xce\x9f'), (1, b'\xce\x9b\xce\xa5\xce\x9a\xce\x95\xce\x99\xce\x9f'), (3, b'\xce\x99\xce\x94\xce\x99\xce\xa9\xce\xa4\xce\x99\xce\x9a\xce\x9f'), (4, b'\xce\x91\xce\x9b\xce\x9b\xce\x9f')])),
                ('address', models.CharField(default=b'', max_length=48)),
                ('city', models.CharField(default=b'', max_length=32)),
                ('tk', models.CharField(default=b'', max_length=6)),
            ],
        ),
        migrations.CreateModel(
            name='SchoolToGrade',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=6)),
                ('name', models.CharField(max_length=64)),
                ('type', models.SmallIntegerField(choices=[(0, b'\xce\x97\xce\x9c\xce\x95\xce\xa1\xce\x97\xce\xa3\xce\x99\xce\x9f'), (1, b'\xce\x95\xce\xa3\xce\xa0\xce\x95\xce\xa1\xce\x99\xce\x9d\xce\x9f')], default=0)),
                ('ddeCode', models.SmallIntegerField(null=True)),
                ('ddeName', models.CharField(blank=True, max_length=64, null=True)),
                ('address', models.CharField(default=b'', max_length=48)),
                ('city', models.CharField(default=b'', max_length=32)),
                ('tk', models.CharField(default=b'', max_length=6)),
            ],
        ),
        migrations.CreateModel(
            name='Specialty',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=12, unique=True)),
                ('name', models.CharField(max_length=64)),
            ],
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codeAfm', models.CharField(max_length=8, unique=True)),
                ('codeGrad', models.CharField(max_length=8, unique=True)),
                ('codeSpec', models.CharField(max_length=8)),
                ('codeSpecId', models.SmallIntegerField(null=True)),
                ('name', models.CharField(max_length=64)),
                ('surname', models.CharField(max_length=64)),
                ('phoneMob', models.CharField(default=b'0000-', max_length=14)),
            ],
        ),
        migrations.AddField(
            model_name='lesson',
            name='acceptances',
            field=models.ManyToManyField(through='personel.Acceptance', to='personel.SchoolToGrade'),
        ),
        migrations.AddField(
            model_name='lesson',
            name='graders',
            field=models.ManyToManyField(through='personel.Grader', to='personel.Teacher'),
        ),
        migrations.AddField(
            model_name='grader',
            name='LessonID',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='personel.Lesson'),
        ),
        migrations.AddField(
            model_name='grader',
            name='TeacherID',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='personel.Teacher'),
        ),
        migrations.AddField(
            model_name='folder',
            name='LessonID',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='personel.Lesson'),
        ),
        migrations.AddField(
            model_name='folder',
            name='bookings',
            field=models.ManyToManyField(through='personel.Booking', to='personel.Grader'),
        ),
        migrations.AddField(
            model_name='booking',
            name='FolderID',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='personel.Folder'),
        ),
        migrations.AddField(
            model_name='booking',
            name='GraderID',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='personel.Grader'),
        ),
        migrations.AddField(
            model_name='booking',
            name='operator',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='acceptance',
            name='LessonID',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='personel.Lesson'),
        ),
        migrations.AddField(
            model_name='acceptance',
            name='SchoolToGradeID',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='personel.SchoolToGrade'),
        ),
        migrations.AlterUniqueTogether(
            name='lesson',
            unique_together=set([('name', 'category', 'type')]),
        ),
        migrations.AlterUniqueTogether(
            name='folder',
            unique_together=set([('LessonID', 'no')]),
        ),
        migrations.AlterUniqueTogether(
            name='acceptance',
            unique_together=set([('LessonID', 'SchoolToGradeID')]),
        ),
    ]
